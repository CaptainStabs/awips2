<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <bean id="gribDecoder" class="com.raytheon.edex.plugin.grib.GribDecoder" />

    <bean id="gribGridPointLock" class="com.raytheon.edex.plugin.grib.GribGridPointLock">
        <constructor-arg value="${grib-decode.count.gridpoints}"/>
        <constructor-arg value="${grib-decode.count.threads}"/>
    </bean>

    <bean id="gribSplitter" class="com.raytheon.edex.plugin.grib.GribSplitter" />
    
    <bean id="useLatestAggregationStrategy" class="org.apache.camel.processor.aggregate.UseLatestAggregationStrategy" />

    <bean id="gribPostProcessor"
        class="com.raytheon.edex.plugin.grib.decoderpostprocessors.GribPostProcessor"
        factory-method="getInstance" />

    <bean id="gribTableLookup" class="com.raytheon.edex.util.grib.GribTableLookup"
        factory-method="getInstance" depends-on="gridRegistered, queryDataRegistered, levelFactoryInitialized" />

    <bean id="gribModelLookup"
        class="com.raytheon.edex.plugin.grib.util.GribModelLookup"
        factory-method="getInstance" /> 

    <bean id="gribSpatialCache"
        class="com.raytheon.edex.plugin.grib.spatial.GribSpatialCache"
        factory-method="getInstance" depends-on="gridcoveragelookup"/>

    <bean id="gribPersister" class="com.raytheon.edex.plugin.grib.GribPersister">
        <constructor-arg value="grid"/>
        <constructor-arg value="${grib-persister.count.threads}"/>
        <constructor-arg value="${grib-persister.count.mb}"/>
    </bean>

    <bean factory-bean="contextManager" factory-method="registerContextStateProcessor">
        <constructor-arg ref="grib-decode"/>
        <constructor-arg ref="gribPersister"/>
    </bean>

    <camelContext id="grib-decode" xmlns="http://camel.apache.org/schema/spring"
        errorHandlerRef="errorHandler">

        <endpoint id="gribSplitJmsEndpoint" uri="jms-durable:queue:Ingest.GribSplit?concurrentConsumers=${grib-split.count.threads}"/>
        <endpoint id="gribDecodeJmsEndpoint" uri="jms-durable:queue:Ingest.GribDecode?concurrentConsumers=${grib-decode.count.threads}"/>

        <!-- Begin Grib Decode Route -->
        <route id="gribSplitIngestRoute">
            <from ref="gribSplitJmsEndpoint" />
            <doTry>
                <pipeline>
                    <setHeader headerName="pluginName">
                        <constant>grid</constant>
                    </setHeader>
                    <bean ref="stringToFile" />
                    <split streaming="true">
                        <method bean="gribSplitter" method="split" />
                        <to uri="jms-durable:queue:Ingest.GribDecode" />
                    </split>
                </pipeline>
                <doCatch>
                    <exception>java.lang.Throwable</exception>
                    <to uri="log:grib?level=ERROR"/>
                </doCatch>
            </doTry>
        </route>

        <route id="gribDecodeIngestRoute">
            <from ref="gribDecodeJmsEndpoint" />
            <doTry>
                <pipeline>
                    <bean ref="gribGridPointLock" method="reserve"/>
                    <bean ref="gribDecoder" />

                    <!-- send for processing -->
                    <bean ref="gribPostProcessor" method="process" />
                    <bean ref="gribPersister" method="persist"/>
                </pipeline>
                <doCatch>
                    <exception>java.lang.Throwable</exception>
                    <to uri="log:grib?level=ERROR"/>
                </doCatch>
                <doFinally>
                    <bean ref="gribGridPointLock" method="release"/>
                </doFinally>
            </doTry>
        </route>

        <!--
           Copy of persist route with a callback to GribPersister for logging.
         -->
        <route id="gribPersistIndexAlert">
            <from uri="direct-vm:gribPersistIndexAlert"/>
            <bean ref="persist" method="persist"/>
            <multicast>
                <pipeline>
                    <!-- Separate index and logging as index needs to
                         elimnate duplicates for the case of stitched grids -->
                    <bean ref="gribPersister" method="eliminateDuplicates"/>
                    <bean ref="index" method="index"/>
                    <to uri="direct-vm:stageNotification"/> 
                </pipeline>
                <split>
                    <simple>${body}</simple>
                    <bean ref="gribPersister" method="updateLogHeader"/>
                    <bean ref="processUtil" method="log"/>
                </split>
            </multicast>
        </route>
    </camelContext>
</beans>
